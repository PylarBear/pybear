name: py3.12 Matrix Tests

on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # Conditional step to install libomp on macOS
    # Need libomp on macOS to run XGBoost
    - name: Install libomp on macOS
      if: matrix.os == 'macos-latest'
      run: brew install libomp

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install dependencies with Poetry
      run: |
        poetry lock
        poetry install

    - name: Run tests
      run: |
        poetry run pytest tests/ -v --doctest-modules --maxfail=1 --disable-warnings --junitxml=reports/junit/junit.xml --html=reports/junit/report.html --cov=pybear --cov-report=xml:reports/coverage/coverage.xml
      timeout-minutes: 120

    - name: Install genbadge
      run: |
        pip install genbadge[tests,coverage]

    - name: Make Directories
      run: |
        mkdir -p .github/badges
        mkdir -p reports/junit
        mkdir -p reports/coverage

    - name: Generate tests badge
      if: matrix.os == 'ubuntu-latest'
      run: |
        genbadge tests -i reports/junit/junit.xml -o .github/badges/tests-badge.svg

    - name: Upload tests badge
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: tests-badge
        path: .github/badges/tests-badge.svg

    - name: Generate coverage badge
      if: matrix.os == 'ubuntu-latest'
      run: |
        genbadge coverage -i reports/coverage/coverage.xml -o .github/badges/coverage-badge.svg

    - name: Upload coverage badge
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-badge
        path: .github/badges/coverage-badge.svg

    - name: Commit Tests & Coverage Badges
      if: matrix.os == 'ubuntu-latest'
      run: |
        git config user.name "ci-bot"
        git config user.email "ci@example.com"
        git add .github/badges/tests-badge.svg
        git add .github/badges/coverage-badge.svg
        git commit -m "Update tests & coverage badges"
        git push
